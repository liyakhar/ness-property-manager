// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Property {
  id          String   @id @default(cuid())
  apartmentNumber Int      @unique
  location    String
  rooms       Int
  readinessStatus ReadinessStatus @default(немеблированная)
  propertyType PropertyType @default(аренда)
  occupancyStatus OccupancyStatus @default(свободна)
  apartmentContents String?
  urgentMatter String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  // Relations
  tenants    Tenant[]
  
  @@map("properties")
}

model Tenant {
  id        String   @id @default(cuid())
  name      String
  apartmentId String
  entryDate DateTime
  exitDate  DateTime?
  status    TenantStatus @default(current)
  notes     String?
  receivePaymentDate DateTime @default(dbgenerated("(strftime('%Y-%m-01', 'now'))"))
  utilityPaymentDate DateTime?
  internetPaymentDate DateTime?
  isPaid    Boolean @default(false)
  paymentAttachment String?
  hidden    Boolean @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  // Relations
  apartment Property @relation(fields: [apartmentId], references: [id], onDelete: Cascade)
  
  @@map("tenants")
}

enum ReadinessStatus {
  меблированная
  немеблированная
}

enum PropertyType {
  аренда
  продажа
}

enum OccupancyStatus {
  занята
  свободна
}

enum TenantStatus {
  current
  past
  future
  upcoming
}
