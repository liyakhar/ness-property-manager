generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Property {
  id                String          @id @default(cuid())
  apartmentNumber   Int             @unique
  location          String
  rooms             Int
  readinessStatus   ReadinessStatus @default(unfurnished)
  propertyType      PropertyType    @default(rent)
  occupancyStatus   OccupancyStatus @default(available)
  urgentMatter      String?
  createdAt         DateTime        @default(now())
  updatedAt         DateTime        @updatedAt
  apartmentContents String?
  images            String?
  tenants           Tenant[]

  @@map("properties")
}

model Tenant {
  id                  String       @id @default(cuid())
  name                String
  apartmentId         String
  entryDate           DateTime
  exitDate            DateTime?
  status              TenantStatus @default(current)
  notes               String?
  receivePaymentDate  DateTime     @default(now())
  utilityPaymentDate  DateTime?
  internetPaymentDate DateTime?
  isPaid              Boolean      @default(false)
  paymentAttachment   String?
  hidden              Boolean      @default(false)
  createdAt           DateTime     @default(now())
  updatedAt           DateTime     @updatedAt
  apartment           Property     @relation(fields: [apartmentId], references: [id], onDelete: Cascade)

  @@map("tenants")
}

model Update {
  id        String   @id @default(cuid())
  author    String
  content   String
  date      DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("updates")
}

enum ReadinessStatus {
  furnished
  unfurnished
}

enum PropertyType {
  rent
  sale
}

enum OccupancyStatus {
  occupied
  available
}

enum TenantStatus {
  current
  past
  future
  upcoming
}
